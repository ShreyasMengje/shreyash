import cv2
import pytesseract
from pdf2image import convert_from_path
import os

# Add Poppler binaries to the PATH
os.environ["PATH"] += os.pathsep + "/usr/bin"

def extract_text_from_images(pdf_path):
    text = ""

    # Convert PDF pages to images using pdf2image
    pages = convert_from_path(pdf_path, 300)  # Set the DPI (dots per inch)

    for i, page in enumerate(pages, start=1):
        # Save the image temporarily
        temp_image_path = f"temp_page_{i}.png"
        page.save(temp_image_path, "PNG")

        # Read the saved image using OpenCV
        img = cv2.imread(temp_image_path)

        # Convert image to grayscale
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

        # Apply adaptive thresholding to preprocess the image
        thresh = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 11, 2)

        # Use pytesseract to perform OCR on the preprocessed image
        img_text = pytesseract.image_to_string(thresh, config='--psm 6')  # PSM 6 for sparse text

        # Append extracted text to the result
        text += f"Page {i}:\n{img_text}\n\n"

        # Remove the temporary image file
        os.remove(temp_image_path)

    return text

try:
    # Ask the user for the input PDF file
    pdf_path = input("Enter the path to the PDF file: ")

    # Check if the file exists
    if not os.path.isfile(pdf_path):
        print("Error: The specified file does not exist.")
    else:
        # Extract text from images in the PDF
        extracted_text = extract_text_from_images(pdf_path)

        # Print the extracted text with proper formatting
        print(extracted_text)

except Exception as e:
    print(f"An error occurred: {e}")
